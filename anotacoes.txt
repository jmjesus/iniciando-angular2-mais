Aula 2 - Iniciando com Data Binding
[value="name"] -> [] Tornou a propriedade reativa o valor desse campo de texto é igual a propriedade name que está no componente

Aula 3 - Disparando eventos

() parenteses - evento - sempre vai alterar a programação, o template vai se comunicar com a programação Ex: (click)="addEmployee()" -> o template altera o componente
[] colchetes - programação se comunica com o template Ex: [value="name"] -> o componente altera o template
[()] - two way data binding

<!-- Template -> Componente -->
<!-- Componente -> Template -->

Aula 4 - Lidando com coleções de dados

*ngFor="" -> precisa do * antes, sintaxe com açúcar, simplifica o uso do ngFor, uso mais explícito, mais manual
estamos usando a variavel da classe não a importação direta

Aula 5 - Brincando com propriedades reativas
Qualquer propriedade reativa que o valor retorna null angular não vai acrescentar essa propriedade na sua tag

Aula 6 - Mostrar ou esconder elementos
Mostrar ou esconder algum elemento
Pode usar *ngIf ou propriedade reativa [hidden] - sentido invertido: ngIf - eu quero mostrar se isso for < 1000
								     Hidden - eu quero esconder se isso for >= 1000. Hidden - não destroi elemento
Usa o hidden normalmente quando quer esconder um elemento específico

Aula 7 - Camada de serviços
utilizando serviços - manutenção fica melhor
O serviço que está responsável por realizar inclusão e a lógica do bônus está dentro do próprio serviço e eu reutilizo aonde eu quiser
e é algo que está embutido no próprio Angular.
Se eu precisar receber outro serviço qualquer, eu já recebo no meu construtor.
Em todos os lugares que eu estou utilizando esse serviço eu não preciso mudar nada porque não estou instanciando diretamente

Aula 8 - Gerando aplicações de produção
Precisa converter TypeScript para JavaScript - ng serve faz isso
chunk {main} main.js, main.js.map (main) 25.3 kB [initial] [rendered]
chunk {polyfills} polyfills.js, polyfills.js.map (polyfills) 140 kB [initial] [rendered]
chunk {runtime} runtime.js, runtime.js.map (runtime) 6.15 kB [entry] [rendered]
chunk {styles} styles.js, styles.js.map (styles) 9.73 kB [initial] [rendered]
chunk {vendor} vendor.js, vendor.js.map (vendor) 2.99 MB [initial] [rendered]
ainda tem uma ferramenta embutida nisso chamada webpack (empacotador)
ng build - vai gerar a pasta dist / seu-projeto